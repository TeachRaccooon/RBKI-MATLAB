% An algorithm that Rob proposed on 08/04/2023, supposed to be a rival to
% svdsketch().
function[U, Sigma, V] = RBKI_incremental_final(A, k, tol, maxiters)
    [m, n] = size(A);
    norm_A = norm(A, 'fro');
    sq_tol = tol^2;
    %Y_i = randn(n, k);
    
    Y_i = [0.29895678162574768066,  -0.34196627140045166016,   0.96594864130020141602,  -1.31693565845489501953,
          -0.40633684396743774414,   0.78396123647689819336,   0.00531004043295979500,  -1.01287293434143066406,
          -0.99769562482833862305,  -0.14807499945163726807,  -0.21214857697486877441,   0.23717460036277770996,
          -0.08980366587638854980,   0.38912740349769592285,   0.54299324750900268555,   0.19744168221950531006,
          -0.24734789133071899414,   0.82217615842819213867,  -1.00800836086273193359,   0.81349641084671020508,
           1.40375840663909912109,  -2.54815745353698730469,  -1.59961032867431640625,  -0.63077670335769653320,
          -2.40918231010437011719,  -1.26158154010772705078,  -0.69095790386199951172,   0.46657323837280273438,
          -0.88568437099456787109,  -0.69069576263427734375,   2.00509524345397949219,  -0.67680275440216064453,
           0.18415980041027069092,  -0.63713198900222778320,  -0.53526514768600463867,   0.52420413494110107422,
           1.49947345256805419922,  -0.14826019108295440674,   0.34763002395629882812,   2.53039216995239257812,
           1.24989056587219238281,  -2.27646946907043457031,   0.60648500919342041016,  -0.26855477690696716309,
           1.02153873443603515625,   1.24468016624450683594,   0.34046339988708496094,  -2.30575060844421386719,
          -1.28967857360839843750,  -2.11300182342529296875,  -1.85156345367431640625,  -0.36917880177497863770,
           0.30849137902259826660,  -1.35996842384338378906,  -1.76625144481658935547,  -0.31991168856620788574,
          -0.79744011163711547852,  -1.23696327209472656250,  -0.28298473358154296875,  -2.88487744331359863281,
          -1.03299450874328613281,  -0.23535305261611938477,   0.55830675363540649414,  -0.71272581815719604492,];
    
    [X_i, ~] = qr(A * Y_i, 0);
    R = []; S = [];
    X_ev = X_i; Y_od = zeros(n, 0);
    i = 1;
    while 1
        if mod(i, 2) ~= 0
            Y_i = A' * X_i;
            R_i = Y_od' * Y_i;
            Y_i = Y_i - Y_od * R_i;
            % Reorthog
            Y_i = Y_i - Y_od *  Y_od' * Y_i;
            [Y_i, R_ii] = qr(Y_i, 0);
            R = [R, R_i; zeros(size(R_ii, 1), size(R, 2)), R_ii]; %#ok<AGROW>
            Y_od = [Y_od, Y_i]; %#ok<AGROW>
            % Early termination - vectors exhausted
            if (abs(R(end)) <= sqrt(eps('double')))
                disp("Early termination 1");
                break;
            end
        else
            X_i = A * Y_i;
            S_i = X_ev' * X_i;
            X_i = X_i - X_ev * S_i;
            % Reorthog
            X_i = X_i - X_ev * X_ev' * X_i;
            [X_i, S_ii] = qr(X_i, 0);
            S = [S, S_i; zeros(size(S_ii, 1), size(S, 2)), S_ii]; %#ok<AGROW>
            X_ev = [X_ev, X_i]; %#ok<AGROW>
            % Early termination - vectors exhausted
            if (abs(S(end)) <= sqrt(eps('double')))
                disp("Early termination 2");
                break;
            end
        end
        % ||A - \hat(A)||_F < eps * ||A||_F
        if norm(R, 'fro') > sqrt(1 - sq_tol) * norm_A
            disp("TERMINATION 3");
            break;
        end
        if i >= maxiters
            break;
        end
        i = i + 1;
    end

    fprintf("Total iters %d\n", i);
    size(R')
    size(S)

    S

    if mod(i, 2) ~= 0
        fprintf("AAAAAAAAAAAAAAAAAAAAAAA\n")
        [U_hat, Sigma, V_hat] = svd(R', 'econ', 'vector');
        U = X_ev(:, 1:size(U_hat, 1)) * U_hat;
        V = Y_od(:, 1:size(V_hat, 1)) * V_hat;
    else
        [U_hat, Sigma, V_hat] = svd(S, 'econ', 'vector');
        U = X_ev(:, 1:size(U_hat, 1)) * U_hat;
        V = Y_od(:, 1:size(V_hat, 1)) * V_hat;
    end
end