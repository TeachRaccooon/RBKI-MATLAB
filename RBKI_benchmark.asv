function[] = RBKI_benchmark()

end


function [] = call_RBKI(A, k, tol, numiters, Data_out)
    A_cpy = A;
    [U1, Sigma1, V1] = RBKI_incremental_final(A, k, tol, numiters);
    [U2, Sigma2, V2] = svd(A_cpy);
    [U3, Sigma3, V3] = RBKI_incremental_final(A, 1, tol, numiters);

    err_rbki =  norm(Sigma2(1:k, 1:k)  - diag(Sigma1(1:k, 1)), "fro") / norm(Sigma2(1:k, 1:k),  "fro");
    err_lanc =  norm(Sigma2(1:k, 1:k)  - diag(Sigma3(1:k, 1)), "fro") / norm(Sigma2(1:k, 1:k),  "fro");
 
    fprintf("||S_svd  - S_rbki||_F/||S_svd||_F: %.20e\n", err_rbki);
    fprintf("||S_svd  - S_lanc||_F/||S_svd||_F: %.20e\n",  err_lanc)

    Data_out = [Data_out

end

function[] = prepare_data()
    A = readmatrix("RBKI_test_matrrix_1.txt");
    % m = 957, n = 14079
    [m, n] = size(A);

    b_sz = 2;
    b_sz_max = 512;
    numiters = 2;
    numiters_max = 64;

    Data_out = [];

    while b_sz <= b_sz_max
            while numiters < numiters_max
                call_RBKI(A, b_sz, tol, numiters, Data_out);
                numiters = numiters * 2;
            end
        b_sz = b_sz * 2;
    end
end

